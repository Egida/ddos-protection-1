version: '3.8'
services:
  mysql:
    image: mysql:latest
    container_name: ddos-mysql
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - ddos
    environment:
      - MYSQL_DATABASE=ddos
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD:-}
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-}
    restart: unless-stopped

  backend:
    build: ./app
    container_name: ddos-app
    ports:
      - 7000:8000
    environment:
      - ASPNETCORE_URLS=http://+:8000
      - DB_PASSWORD="${MYSQL_PASSWORD:-}"
    restart: unless-stopped
    depends_on:
      - mysql
      - nginx
    networks:
      - ddos

  nginx:
    image: nginx:latest
    container_name: ddos-nginx
    ports:
      - 8080:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    networks:
      - ddos

  grafana:
    image: grafana/grafana:latest
    container_name: ddos-grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - ddos
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: ddos-prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - ddos

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - 9113:9113
    command: 
      - '-nginx.scrape-uri=http://ddos-nginx/stub_status'
    networks:
      - ddos
    restart: unless-stopped
    depends_on:
      - nginx

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    # container_name: ddos-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - ddos

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: ddos-cadvisor
    ports:
      - 8888:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - nginx
    networks:
      - ddos

networks:
  ddos:
    driver: bridge

volumes:
  mysql-data: {}
  prometheus_data: {}
  grafana_data: {}